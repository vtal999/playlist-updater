name: Update Playlist Token

on:
  schedule:
    - cron: "*/30 * * * *"  # Запускается каждые 30 минут
  workflow_dispatch:  # Позволяет запускать вручную

jobs:
  update-playlist:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Обновленная версия

      - name: Set up Python
        uses: actions/setup-python@v3  # Обновленная версия
        with:
          python-version: '3.9'  # Указываем точную версию Python

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Использование файла с зависимостями

      - name: Configure Git user
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"  # Использование переменной из секретов
          git config --global user.name "${{ secrets.GIT_NAME }}"  # Использование переменной из секретов

      - name: Update playlist with new token
        run: |
          export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}  # Передаем токен в окружение
          python3 update_playlist.py  # Запуск твоего скрипта с токеном

      - name: Check for changes before pushing
        run: |
          git diff --exit-code  # Если изменений нет, то не будет продолжения

      - name: Force add the playlist file and commit
        run: |
          git add -f playlist.m3u  # Принудительное добавление файла
          git commit -m "Update playlist with new token" || echo "No changes to commit"  # Если изменений нет, пропускаем

      - name: Push changes to repository
        run: |
          git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/vtal999/playlist-updater.git  # Принудительный пуш

      - name: Check playlist file contents before and after
        run: |
          cat playlist.m3u  # Печать содержимого файла для проверки



















